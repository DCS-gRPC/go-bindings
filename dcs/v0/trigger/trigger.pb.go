// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: dcs/trigger/v0/trigger.proto

package trigger

import (
	common "github.com/DCS-gRPC/go-bindings/dcs/v0/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LineType int32

const (
	// protolint:disable:next ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
	LineType_LINE_TYPE_NO_LINE   LineType = 0
	LineType_LINE_TYPE_SOLID     LineType = 1
	LineType_LINE_TYPE_DASHED    LineType = 2
	LineType_LINE_TYPE_DOTTED    LineType = 3
	LineType_LINE_TYPE_DOT_DASH  LineType = 4
	LineType_LINE_TYPE_LONG_DASH LineType = 5
	LineType_LINE_TYPE_TWO_DASH  LineType = 6
)

// Enum value maps for LineType.
var (
	LineType_name = map[int32]string{
		0: "LINE_TYPE_NO_LINE",
		1: "LINE_TYPE_SOLID",
		2: "LINE_TYPE_DASHED",
		3: "LINE_TYPE_DOTTED",
		4: "LINE_TYPE_DOT_DASH",
		5: "LINE_TYPE_LONG_DASH",
		6: "LINE_TYPE_TWO_DASH",
	}
	LineType_value = map[string]int32{
		"LINE_TYPE_NO_LINE":   0,
		"LINE_TYPE_SOLID":     1,
		"LINE_TYPE_DASHED":    2,
		"LINE_TYPE_DOTTED":    3,
		"LINE_TYPE_DOT_DASH":  4,
		"LINE_TYPE_LONG_DASH": 5,
		"LINE_TYPE_TWO_DASH":  6,
	}
)

func (x LineType) Enum() *LineType {
	p := new(LineType)
	*p = x
	return p
}

func (x LineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LineType) Descriptor() protoreflect.EnumDescriptor {
	return file_dcs_trigger_v0_trigger_proto_enumTypes[0].Descriptor()
}

func (LineType) Type() protoreflect.EnumType {
	return &file_dcs_trigger_v0_trigger_proto_enumTypes[0]
}

func (x LineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LineType.Descriptor instead.
func (LineType) EnumDescriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{0}
}

type Shape int32

const (
	Shape_SHAPE_UNSPECIFIED Shape = 0
	Shape_SHAPE_LINE        Shape = 1
	Shape_SHAPE_CIRCLE      Shape = 2
	Shape_SHAPE_RECT        Shape = 3
	Shape_SHAPE_ARROW       Shape = 4
	Shape_SHAPE_TEXT        Shape = 5
	Shape_SHAPE_QUAD        Shape = 6
	Shape_SHAPE_FREEFORM    Shape = 7
)

// Enum value maps for Shape.
var (
	Shape_name = map[int32]string{
		0: "SHAPE_UNSPECIFIED",
		1: "SHAPE_LINE",
		2: "SHAPE_CIRCLE",
		3: "SHAPE_RECT",
		4: "SHAPE_ARROW",
		5: "SHAPE_TEXT",
		6: "SHAPE_QUAD",
		7: "SHAPE_FREEFORM",
	}
	Shape_value = map[string]int32{
		"SHAPE_UNSPECIFIED": 0,
		"SHAPE_LINE":        1,
		"SHAPE_CIRCLE":      2,
		"SHAPE_RECT":        3,
		"SHAPE_ARROW":       4,
		"SHAPE_TEXT":        5,
		"SHAPE_QUAD":        6,
		"SHAPE_FREEFORM":    7,
	}
)

func (x Shape) Enum() *Shape {
	p := new(Shape)
	*p = x
	return p
}

func (x Shape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shape) Descriptor() protoreflect.EnumDescriptor {
	return file_dcs_trigger_v0_trigger_proto_enumTypes[1].Descriptor()
}

func (Shape) Type() protoreflect.EnumType {
	return &file_dcs_trigger_v0_trigger_proto_enumTypes[1]
}

func (x Shape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shape.Descriptor instead.
func (Shape) EnumDescriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{1}
}

type SmokeRequest_SmokeColor int32

const (
	SmokeRequest_SMOKE_COLOR_UNSPECIFIED SmokeRequest_SmokeColor = 0
	SmokeRequest_SMOKE_COLOR_GREEN       SmokeRequest_SmokeColor = 1
	SmokeRequest_SMOKE_COLOR_RED         SmokeRequest_SmokeColor = 2
	SmokeRequest_SMOKE_COLOR_WHITE       SmokeRequest_SmokeColor = 3
	SmokeRequest_SMOKE_COLOR_ORANGE      SmokeRequest_SmokeColor = 4
	SmokeRequest_SMOKE_COLOR_BLUE        SmokeRequest_SmokeColor = 5
)

// Enum value maps for SmokeRequest_SmokeColor.
var (
	SmokeRequest_SmokeColor_name = map[int32]string{
		0: "SMOKE_COLOR_UNSPECIFIED",
		1: "SMOKE_COLOR_GREEN",
		2: "SMOKE_COLOR_RED",
		3: "SMOKE_COLOR_WHITE",
		4: "SMOKE_COLOR_ORANGE",
		5: "SMOKE_COLOR_BLUE",
	}
	SmokeRequest_SmokeColor_value = map[string]int32{
		"SMOKE_COLOR_UNSPECIFIED": 0,
		"SMOKE_COLOR_GREEN":       1,
		"SMOKE_COLOR_RED":         2,
		"SMOKE_COLOR_WHITE":       3,
		"SMOKE_COLOR_ORANGE":      4,
		"SMOKE_COLOR_BLUE":        5,
	}
)

func (x SmokeRequest_SmokeColor) Enum() *SmokeRequest_SmokeColor {
	p := new(SmokeRequest_SmokeColor)
	*p = x
	return p
}

func (x SmokeRequest_SmokeColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmokeRequest_SmokeColor) Descriptor() protoreflect.EnumDescriptor {
	return file_dcs_trigger_v0_trigger_proto_enumTypes[2].Descriptor()
}

func (SmokeRequest_SmokeColor) Type() protoreflect.EnumType {
	return &file_dcs_trigger_v0_trigger_proto_enumTypes[2]
}

func (x SmokeRequest_SmokeColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmokeRequest_SmokeColor.Descriptor instead.
func (SmokeRequest_SmokeColor) EnumDescriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{22, 0}
}

type SignalFlareRequest_FlareColor int32

const (
	SignalFlareRequest_FLARE_COLOR_UNSPECIFIED SignalFlareRequest_FlareColor = 0
	SignalFlareRequest_FLARE_COLOR_GREEN       SignalFlareRequest_FlareColor = 1
	SignalFlareRequest_FLARE_COLOR_RED         SignalFlareRequest_FlareColor = 2
	SignalFlareRequest_FLARE_COLOR_WHITE       SignalFlareRequest_FlareColor = 3
	SignalFlareRequest_FLARE_COLOR_YELLOW      SignalFlareRequest_FlareColor = 4
)

// Enum value maps for SignalFlareRequest_FlareColor.
var (
	SignalFlareRequest_FlareColor_name = map[int32]string{
		0: "FLARE_COLOR_UNSPECIFIED",
		1: "FLARE_COLOR_GREEN",
		2: "FLARE_COLOR_RED",
		3: "FLARE_COLOR_WHITE",
		4: "FLARE_COLOR_YELLOW",
	}
	SignalFlareRequest_FlareColor_value = map[string]int32{
		"FLARE_COLOR_UNSPECIFIED": 0,
		"FLARE_COLOR_GREEN":       1,
		"FLARE_COLOR_RED":         2,
		"FLARE_COLOR_WHITE":       3,
		"FLARE_COLOR_YELLOW":      4,
	}
)

func (x SignalFlareRequest_FlareColor) Enum() *SignalFlareRequest_FlareColor {
	p := new(SignalFlareRequest_FlareColor)
	*p = x
	return p
}

func (x SignalFlareRequest_FlareColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalFlareRequest_FlareColor) Descriptor() protoreflect.EnumDescriptor {
	return file_dcs_trigger_v0_trigger_proto_enumTypes[3].Descriptor()
}

func (SignalFlareRequest_FlareColor) Type() protoreflect.EnumType {
	return &file_dcs_trigger_v0_trigger_proto_enumTypes[3]
}

func (x SignalFlareRequest_FlareColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalFlareRequest_FlareColor.Descriptor instead.
func (SignalFlareRequest_FlareColor) EnumDescriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{26, 0}
}

type OutTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	DisplayTime int32  `protobuf:"varint,2,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	ClearView   bool   `protobuf:"varint,3,opt,name=clear_view,json=clearView,proto3" json:"clear_view,omitempty"`
}

func (x *OutTextRequest) Reset() {
	*x = OutTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextRequest) ProtoMessage() {}

func (x *OutTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextRequest.ProtoReflect.Descriptor instead.
func (*OutTextRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *OutTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OutTextRequest) GetDisplayTime() int32 {
	if x != nil {
		return x.DisplayTime
	}
	return 0
}

func (x *OutTextRequest) GetClearView() bool {
	if x != nil {
		return x.ClearView
	}
	return false
}

type OutTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutTextResponse) Reset() {
	*x = OutTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextResponse) ProtoMessage() {}

func (x *OutTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextResponse.ProtoReflect.Descriptor instead.
func (*OutTextResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{1}
}

type OutTextForCoalitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	DisplayTime int32            `protobuf:"varint,2,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	ClearView   bool             `protobuf:"varint,3,opt,name=clear_view,json=clearView,proto3" json:"clear_view,omitempty"`
	Coalition   common.Coalition `protobuf:"varint,4,opt,name=coalition,proto3,enum=dcs.common.v0.Coalition" json:"coalition,omitempty"`
}

func (x *OutTextForCoalitionRequest) Reset() {
	*x = OutTextForCoalitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForCoalitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForCoalitionRequest) ProtoMessage() {}

func (x *OutTextForCoalitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForCoalitionRequest.ProtoReflect.Descriptor instead.
func (*OutTextForCoalitionRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{2}
}

func (x *OutTextForCoalitionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OutTextForCoalitionRequest) GetDisplayTime() int32 {
	if x != nil {
		return x.DisplayTime
	}
	return 0
}

func (x *OutTextForCoalitionRequest) GetClearView() bool {
	if x != nil {
		return x.ClearView
	}
	return false
}

func (x *OutTextForCoalitionRequest) GetCoalition() common.Coalition {
	if x != nil {
		return x.Coalition
	}
	return common.Coalition(0)
}

type OutTextForCoalitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutTextForCoalitionResponse) Reset() {
	*x = OutTextForCoalitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForCoalitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForCoalitionResponse) ProtoMessage() {}

func (x *OutTextForCoalitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForCoalitionResponse.ProtoReflect.Descriptor instead.
func (*OutTextForCoalitionResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{3}
}

type OutTextForGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	DisplayTime int32  `protobuf:"varint,2,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	ClearView   bool   `protobuf:"varint,3,opt,name=clear_view,json=clearView,proto3" json:"clear_view,omitempty"`
	GroupId     uint32 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *OutTextForGroupRequest) Reset() {
	*x = OutTextForGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForGroupRequest) ProtoMessage() {}

func (x *OutTextForGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForGroupRequest.ProtoReflect.Descriptor instead.
func (*OutTextForGroupRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{4}
}

func (x *OutTextForGroupRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OutTextForGroupRequest) GetDisplayTime() int32 {
	if x != nil {
		return x.DisplayTime
	}
	return 0
}

func (x *OutTextForGroupRequest) GetClearView() bool {
	if x != nil {
		return x.ClearView
	}
	return false
}

func (x *OutTextForGroupRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type OutTextForGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutTextForGroupResponse) Reset() {
	*x = OutTextForGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForGroupResponse) ProtoMessage() {}

func (x *OutTextForGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForGroupResponse.ProtoReflect.Descriptor instead.
func (*OutTextForGroupResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{5}
}

type OutTextForUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	DisplayTime int32  `protobuf:"varint,2,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	ClearView   bool   `protobuf:"varint,3,opt,name=clear_view,json=clearView,proto3" json:"clear_view,omitempty"`
	UnitId      uint32 `protobuf:"varint,4,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
}

func (x *OutTextForUnitRequest) Reset() {
	*x = OutTextForUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForUnitRequest) ProtoMessage() {}

func (x *OutTextForUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForUnitRequest.ProtoReflect.Descriptor instead.
func (*OutTextForUnitRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{6}
}

func (x *OutTextForUnitRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OutTextForUnitRequest) GetDisplayTime() int32 {
	if x != nil {
		return x.DisplayTime
	}
	return 0
}

func (x *OutTextForUnitRequest) GetClearView() bool {
	if x != nil {
		return x.ClearView
	}
	return false
}

func (x *OutTextForUnitRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

type OutTextForUnitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutTextForUnitResponse) Reset() {
	*x = OutTextForUnitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutTextForUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutTextForUnitResponse) ProtoMessage() {}

func (x *OutTextForUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutTextForUnitResponse.ProtoReflect.Descriptor instead.
func (*OutTextForUnitResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{7}
}

type GetUserFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag string `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *GetUserFlagRequest) Reset() {
	*x = GetUserFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFlagRequest) ProtoMessage() {}

func (x *GetUserFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFlagRequest.ProtoReflect.Descriptor instead.
func (*GetUserFlagRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserFlagRequest) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

type GetUserFlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetUserFlagResponse) Reset() {
	*x = GetUserFlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFlagResponse) ProtoMessage() {}

func (x *GetUserFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFlagResponse.ProtoReflect.Descriptor instead.
func (*GetUserFlagResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserFlagResponse) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetUserFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag  string `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetUserFlagRequest) Reset() {
	*x = SetUserFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserFlagRequest) ProtoMessage() {}

func (x *SetUserFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserFlagRequest.ProtoReflect.Descriptor instead.
func (*SetUserFlagRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{10}
}

func (x *SetUserFlagRequest) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *SetUserFlagRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetUserFlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetUserFlagResponse) Reset() {
	*x = SetUserFlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserFlagResponse) ProtoMessage() {}

func (x *SetUserFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserFlagResponse.ProtoReflect.Descriptor instead.
func (*SetUserFlagResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{11}
}

type MarkToAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string                `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Position *common.InputPosition `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	ReadOnly bool                  `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Message  string                `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkToAllRequest) Reset() {
	*x = MarkToAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToAllRequest) ProtoMessage() {}

func (x *MarkToAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToAllRequest.ProtoReflect.Descriptor instead.
func (*MarkToAllRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{12}
}

func (x *MarkToAllRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MarkToAllRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MarkToAllRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MarkToAllRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkToAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkToAllResponse) Reset() {
	*x = MarkToAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToAllResponse) ProtoMessage() {}

func (x *MarkToAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToAllResponse.ProtoReflect.Descriptor instead.
func (*MarkToAllResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{13}
}

func (x *MarkToAllResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MarkToCoalitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text      string                `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Position  *common.InputPosition `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Coalition common.Coalition      `protobuf:"varint,4,opt,name=coalition,proto3,enum=dcs.common.v0.Coalition" json:"coalition,omitempty"`
	ReadOnly  bool                  `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Message   string                `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkToCoalitionRequest) Reset() {
	*x = MarkToCoalitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToCoalitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToCoalitionRequest) ProtoMessage() {}

func (x *MarkToCoalitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToCoalitionRequest.ProtoReflect.Descriptor instead.
func (*MarkToCoalitionRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{14}
}

func (x *MarkToCoalitionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MarkToCoalitionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MarkToCoalitionRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MarkToCoalitionRequest) GetCoalition() common.Coalition {
	if x != nil {
		return x.Coalition
	}
	return common.Coalition(0)
}

func (x *MarkToCoalitionRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MarkToCoalitionRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkToCoalitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkToCoalitionResponse) Reset() {
	*x = MarkToCoalitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToCoalitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToCoalitionResponse) ProtoMessage() {}

func (x *MarkToCoalitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToCoalitionResponse.ProtoReflect.Descriptor instead.
func (*MarkToCoalitionResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{15}
}

func (x *MarkToCoalitionResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MarkToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text     string                `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Position *common.InputPosition `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	GroupId  uint32                `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReadOnly bool                  `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Message  string                `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkToGroupRequest) Reset() {
	*x = MarkToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToGroupRequest) ProtoMessage() {}

func (x *MarkToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToGroupRequest.ProtoReflect.Descriptor instead.
func (*MarkToGroupRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{16}
}

func (x *MarkToGroupRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MarkToGroupRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MarkToGroupRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MarkToGroupRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *MarkToGroupRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MarkToGroupRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkToGroupResponse) Reset() {
	*x = MarkToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkToGroupResponse) ProtoMessage() {}

func (x *MarkToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkToGroupResponse.ProtoReflect.Descriptor instead.
func (*MarkToGroupResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{17}
}

func (x *MarkToGroupResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveMarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveMarkRequest) Reset() {
	*x = RemoveMarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMarkRequest) ProtoMessage() {}

func (x *RemoveMarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveMarkRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveMarkRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveMarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMarkResponse) Reset() {
	*x = RemoveMarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMarkResponse) ProtoMessage() {}

func (x *RemoveMarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMarkResponse.ProtoReflect.Descriptor instead.
func (*RemoveMarkResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{19}
}

type ExplosionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *common.InputPosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Power    uint32                `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *ExplosionRequest) Reset() {
	*x = ExplosionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplosionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplosionRequest) ProtoMessage() {}

func (x *ExplosionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplosionRequest.ProtoReflect.Descriptor instead.
func (*ExplosionRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{20}
}

func (x *ExplosionRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ExplosionRequest) GetPower() uint32 {
	if x != nil {
		return x.Power
	}
	return 0
}

type ExplosionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExplosionResponse) Reset() {
	*x = ExplosionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplosionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplosionResponse) ProtoMessage() {}

func (x *ExplosionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplosionResponse.ProtoReflect.Descriptor instead.
func (*ExplosionResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{21}
}

type SmokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Altitude parameter will be ignored. Smoke always eminates from ground
	// level which will be calculated server-side
	Position *common.InputPosition   `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Color    SmokeRequest_SmokeColor `protobuf:"varint,2,opt,name=color,proto3,enum=dcs.trigger.v0.SmokeRequest_SmokeColor" json:"color,omitempty"`
}

func (x *SmokeRequest) Reset() {
	*x = SmokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmokeRequest) ProtoMessage() {}

func (x *SmokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmokeRequest.ProtoReflect.Descriptor instead.
func (*SmokeRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{22}
}

func (x *SmokeRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SmokeRequest) GetColor() SmokeRequest_SmokeColor {
	if x != nil {
		return x.Color
	}
	return SmokeRequest_SMOKE_COLOR_UNSPECIFIED
}

type SmokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SmokeResponse) Reset() {
	*x = SmokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmokeResponse) ProtoMessage() {}

func (x *SmokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmokeResponse.ProtoReflect.Descriptor instead.
func (*SmokeResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{23}
}

type IlluminationBombRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The altitude of Illumination Bombs is meters above ground. Ground level
	// will be calculated server-side
	Position *common.InputPosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Power    uint32                `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *IlluminationBombRequest) Reset() {
	*x = IlluminationBombRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlluminationBombRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlluminationBombRequest) ProtoMessage() {}

func (x *IlluminationBombRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlluminationBombRequest.ProtoReflect.Descriptor instead.
func (*IlluminationBombRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{24}
}

func (x *IlluminationBombRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *IlluminationBombRequest) GetPower() uint32 {
	if x != nil {
		return x.Power
	}
	return 0
}

type IlluminationBombResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IlluminationBombResponse) Reset() {
	*x = IlluminationBombResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlluminationBombResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlluminationBombResponse) ProtoMessage() {}

func (x *IlluminationBombResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlluminationBombResponse.ProtoReflect.Descriptor instead.
func (*IlluminationBombResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{25}
}

type SignalFlareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Altitude parameter will be ignored. Signal flares always fire from
	// ground level which will be calculated server-side
	Position *common.InputPosition         `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Color    SignalFlareRequest_FlareColor `protobuf:"varint,2,opt,name=color,proto3,enum=dcs.trigger.v0.SignalFlareRequest_FlareColor" json:"color,omitempty"`
	Azimuth  uint32                        `protobuf:"varint,3,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
}

func (x *SignalFlareRequest) Reset() {
	*x = SignalFlareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalFlareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalFlareRequest) ProtoMessage() {}

func (x *SignalFlareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalFlareRequest.ProtoReflect.Descriptor instead.
func (*SignalFlareRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{26}
}

func (x *SignalFlareRequest) GetPosition() *common.InputPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SignalFlareRequest) GetColor() SignalFlareRequest_FlareColor {
	if x != nil {
		return x.Color
	}
	return SignalFlareRequest_FLARE_COLOR_UNSPECIFIED
}

func (x *SignalFlareRequest) GetAzimuth() uint32 {
	if x != nil {
		return x.Azimuth
	}
	return 0
}

type SignalFlareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignalFlareResponse) Reset() {
	*x = SignalFlareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalFlareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalFlareResponse) ProtoMessage() {}

func (x *SignalFlareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalFlareResponse.ProtoReflect.Descriptor instead.
func (*SignalFlareResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{27}
}

// Represents an RGBA color but instead of using 0-255 as the color
// values it uses 0 to 1. A red color with 50% transparency would be
// RGBA of 1, 0, 0, 0.5
type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red   float64 `protobuf:"fixed64,1,opt,name=red,proto3" json:"red,omitempty"`
	Green float64 `protobuf:"fixed64,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue  float64 `protobuf:"fixed64,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Alpha float64 `protobuf:"fixed64,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{28}
}

func (x *Color) GetRed() float64 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *Color) GetGreen() float64 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *Color) GetBlue() float64 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *Color) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

type MarkupToAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape       Shape                   `protobuf:"varint,1,opt,name=shape,proto3,enum=dcs.trigger.v0.Shape" json:"shape,omitempty"`
	Points      []*common.InputPosition `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	BorderColor *Color                  `protobuf:"bytes,3,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	FillColor   *Color                  `protobuf:"bytes,4,opt,name=fill_color,json=fillColor,proto3" json:"fill_color,omitempty"`
	LineType    LineType                `protobuf:"varint,5,opt,name=line_type,json=lineType,proto3,enum=dcs.trigger.v0.LineType" json:"line_type,omitempty"`
	ReadOnly    bool                    `protobuf:"varint,6,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Message     string                  `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkupToAllRequest) Reset() {
	*x = MarkupToAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupToAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupToAllRequest) ProtoMessage() {}

func (x *MarkupToAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupToAllRequest.ProtoReflect.Descriptor instead.
func (*MarkupToAllRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{29}
}

func (x *MarkupToAllRequest) GetShape() Shape {
	if x != nil {
		return x.Shape
	}
	return Shape_SHAPE_UNSPECIFIED
}

func (x *MarkupToAllRequest) GetPoints() []*common.InputPosition {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *MarkupToAllRequest) GetBorderColor() *Color {
	if x != nil {
		return x.BorderColor
	}
	return nil
}

func (x *MarkupToAllRequest) GetFillColor() *Color {
	if x != nil {
		return x.FillColor
	}
	return nil
}

func (x *MarkupToAllRequest) GetLineType() LineType {
	if x != nil {
		return x.LineType
	}
	return LineType_LINE_TYPE_NO_LINE
}

func (x *MarkupToAllRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MarkupToAllRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkupToAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkupToAllResponse) Reset() {
	*x = MarkupToAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupToAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupToAllResponse) ProtoMessage() {}

func (x *MarkupToAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupToAllResponse.ProtoReflect.Descriptor instead.
func (*MarkupToAllResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{30}
}

func (x *MarkupToAllResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MarkupToCoalitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shape       Shape                   `protobuf:"varint,1,opt,name=shape,proto3,enum=dcs.trigger.v0.Shape" json:"shape,omitempty"`
	Coalition   common.Coalition        `protobuf:"varint,2,opt,name=coalition,proto3,enum=dcs.common.v0.Coalition" json:"coalition,omitempty"`
	Points      []*common.InputPosition `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`
	BorderColor *Color                  `protobuf:"bytes,4,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	FillColor   *Color                  `protobuf:"bytes,5,opt,name=fill_color,json=fillColor,proto3" json:"fill_color,omitempty"`
	LineType    LineType                `protobuf:"varint,6,opt,name=line_type,json=lineType,proto3,enum=dcs.trigger.v0.LineType" json:"line_type,omitempty"`
	ReadOnly    bool                    `protobuf:"varint,7,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	Message     string                  `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkupToCoalitionRequest) Reset() {
	*x = MarkupToCoalitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupToCoalitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupToCoalitionRequest) ProtoMessage() {}

func (x *MarkupToCoalitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupToCoalitionRequest.ProtoReflect.Descriptor instead.
func (*MarkupToCoalitionRequest) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{31}
}

func (x *MarkupToCoalitionRequest) GetShape() Shape {
	if x != nil {
		return x.Shape
	}
	return Shape_SHAPE_UNSPECIFIED
}

func (x *MarkupToCoalitionRequest) GetCoalition() common.Coalition {
	if x != nil {
		return x.Coalition
	}
	return common.Coalition(0)
}

func (x *MarkupToCoalitionRequest) GetPoints() []*common.InputPosition {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *MarkupToCoalitionRequest) GetBorderColor() *Color {
	if x != nil {
		return x.BorderColor
	}
	return nil
}

func (x *MarkupToCoalitionRequest) GetFillColor() *Color {
	if x != nil {
		return x.FillColor
	}
	return nil
}

func (x *MarkupToCoalitionRequest) GetLineType() LineType {
	if x != nil {
		return x.LineType
	}
	return LineType_LINE_TYPE_NO_LINE
}

func (x *MarkupToCoalitionRequest) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MarkupToCoalitionRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkupToCoalitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkupToCoalitionResponse) Reset() {
	*x = MarkupToCoalitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupToCoalitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupToCoalitionResponse) ProtoMessage() {}

func (x *MarkupToCoalitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dcs_trigger_v0_trigger_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupToCoalitionResponse.ProtoReflect.Descriptor instead.
func (*MarkupToCoalitionResponse) Descriptor() ([]byte, []int) {
	return file_dcs_trigger_v0_trigger_proto_rawDescGZIP(), []int{32}
}

func (x *MarkupToCoalitionResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_dcs_trigger_v0_trigger_proto protoreflect.FileDescriptor

var file_dcs_trigger_v0_trigger_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x63, 0x73, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x30,
	0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x1a, 0x1a,
	0x64, 0x63, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0e, 0x4f, 0x75,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x22, 0x11, 0x0a, 0x0f, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x6f,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72,
	0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x4f, 0x75, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x22, 0x18, 0x0a, 0x16, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x4d, 0x61,
	0x72, 0x6b, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x72,
	0x6b, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x63, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x29, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x12,
	0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6c,
	0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x02,
	0x0a, 0x0c, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x53, 0x6d, 0x6f, 0x6b,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4d, 0x4f, 0x4b, 0x45, 0x5f,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x4d, 0x4f, 0x4b, 0x45, 0x5f, 0x43, 0x4f, 0x4c,
	0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4d,
	0x4f, 0x4b, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x4d, 0x4f, 0x4b, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x57,
	0x48, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4d, 0x4f, 0x4b, 0x45, 0x5f,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x4d, 0x4f, 0x4b, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x4c,
	0x55, 0x45, 0x10, 0x05, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x17, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb4, 0x02, 0x0a,
	0x12, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x64,
	0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x22, 0x84, 0x01, 0x0a,
	0x0a, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x17, 0x46,
	0x4c, 0x41, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4c, 0x41, 0x52,
	0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x46, 0x4c, 0x41, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4c, 0x41, 0x52, 0x45, 0x5f, 0x43, 0x4f,
	0x4c, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x46,
	0x4c, 0x41, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f,
	0x57, 0x10, 0x04, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0xd5, 0x02, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70,
	0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x38, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x35, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a,
	0x13, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x03, 0x0a, 0x18, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54,
	0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x36,
	0x0a, 0x09, 0x63, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0c,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x63, 0x73,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x09,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x4d, 0x61,
	0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x2a, 0xab, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x54, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x54, 0x5f, 0x44, 0x41,
	0x53, 0x48, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x5f, 0x44, 0x41, 0x53, 0x48, 0x10, 0x05, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x44,
	0x41, 0x53, 0x48, 0x10, 0x06, 0x2a, 0x95, 0x01, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x48, 0x41, 0x50, 0x45, 0x5f,
	0x43, 0x49, 0x52, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x48, 0x41, 0x50,
	0x45, 0x5f, 0x41, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41,
	0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x41,
	0x50, 0x45, 0x5f, 0x51, 0x55, 0x41, 0x44, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x48, 0x41,
	0x50, 0x45, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x07, 0x32, 0xdd, 0x0b,
	0x0a, 0x0e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4c, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70,
	0x0a, 0x13, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x61, 0x6c,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f,
	0x72, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x0f, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x26, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x46, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x46, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30,
	0x2e, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64,
	0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x09, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x64, 0x63, 0x73,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64,
	0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64,
	0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x54,
	0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x63, 0x73,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x41, 0x6c, 0x6c,
	0x12, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x11, 0x4d,
	0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x63, 0x73,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x75, 0x70, 0x54, 0x6f, 0x43, 0x6f, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x21, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x09, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x45,
	0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x53, 0x6d, 0x6f, 0x6b, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x63,
	0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x6d, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x63, 0x73, 0x2e,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x6d, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x49, 0x6c,
	0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6d, 0x62, 0x12, 0x27,
	0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e,
	0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6d, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6d, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61,
	0x72, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x30, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x63, 0x73, 0x2e, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x6c,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x53, 0x5a,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x43, 0x53, 0x2d,
	0x67, 0x52, 0x50, 0x43, 0x2f, 0x67, 0x6f, 0x2d, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x2f, 0x64, 0x63, 0x73, 0x2f, 0x76, 0x30, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0xaa,
	0x02, 0x20, 0x52, 0x75, 0x72, 0x6f, 0x75, 0x6e, 0x69, 0x4a, 0x6f, 0x6e, 0x65, 0x73, 0x2e, 0x44,
	0x63, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x30, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dcs_trigger_v0_trigger_proto_rawDescOnce sync.Once
	file_dcs_trigger_v0_trigger_proto_rawDescData = file_dcs_trigger_v0_trigger_proto_rawDesc
)

func file_dcs_trigger_v0_trigger_proto_rawDescGZIP() []byte {
	file_dcs_trigger_v0_trigger_proto_rawDescOnce.Do(func() {
		file_dcs_trigger_v0_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(file_dcs_trigger_v0_trigger_proto_rawDescData)
	})
	return file_dcs_trigger_v0_trigger_proto_rawDescData
}

var file_dcs_trigger_v0_trigger_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_dcs_trigger_v0_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_dcs_trigger_v0_trigger_proto_goTypes = []interface{}{
	(LineType)(0),                       // 0: dcs.trigger.v0.LineType
	(Shape)(0),                          // 1: dcs.trigger.v0.Shape
	(SmokeRequest_SmokeColor)(0),        // 2: dcs.trigger.v0.SmokeRequest.SmokeColor
	(SignalFlareRequest_FlareColor)(0),  // 3: dcs.trigger.v0.SignalFlareRequest.FlareColor
	(*OutTextRequest)(nil),              // 4: dcs.trigger.v0.OutTextRequest
	(*OutTextResponse)(nil),             // 5: dcs.trigger.v0.OutTextResponse
	(*OutTextForCoalitionRequest)(nil),  // 6: dcs.trigger.v0.OutTextForCoalitionRequest
	(*OutTextForCoalitionResponse)(nil), // 7: dcs.trigger.v0.OutTextForCoalitionResponse
	(*OutTextForGroupRequest)(nil),      // 8: dcs.trigger.v0.OutTextForGroupRequest
	(*OutTextForGroupResponse)(nil),     // 9: dcs.trigger.v0.OutTextForGroupResponse
	(*OutTextForUnitRequest)(nil),       // 10: dcs.trigger.v0.OutTextForUnitRequest
	(*OutTextForUnitResponse)(nil),      // 11: dcs.trigger.v0.OutTextForUnitResponse
	(*GetUserFlagRequest)(nil),          // 12: dcs.trigger.v0.GetUserFlagRequest
	(*GetUserFlagResponse)(nil),         // 13: dcs.trigger.v0.GetUserFlagResponse
	(*SetUserFlagRequest)(nil),          // 14: dcs.trigger.v0.SetUserFlagRequest
	(*SetUserFlagResponse)(nil),         // 15: dcs.trigger.v0.SetUserFlagResponse
	(*MarkToAllRequest)(nil),            // 16: dcs.trigger.v0.MarkToAllRequest
	(*MarkToAllResponse)(nil),           // 17: dcs.trigger.v0.MarkToAllResponse
	(*MarkToCoalitionRequest)(nil),      // 18: dcs.trigger.v0.MarkToCoalitionRequest
	(*MarkToCoalitionResponse)(nil),     // 19: dcs.trigger.v0.MarkToCoalitionResponse
	(*MarkToGroupRequest)(nil),          // 20: dcs.trigger.v0.MarkToGroupRequest
	(*MarkToGroupResponse)(nil),         // 21: dcs.trigger.v0.MarkToGroupResponse
	(*RemoveMarkRequest)(nil),           // 22: dcs.trigger.v0.RemoveMarkRequest
	(*RemoveMarkResponse)(nil),          // 23: dcs.trigger.v0.RemoveMarkResponse
	(*ExplosionRequest)(nil),            // 24: dcs.trigger.v0.ExplosionRequest
	(*ExplosionResponse)(nil),           // 25: dcs.trigger.v0.ExplosionResponse
	(*SmokeRequest)(nil),                // 26: dcs.trigger.v0.SmokeRequest
	(*SmokeResponse)(nil),               // 27: dcs.trigger.v0.SmokeResponse
	(*IlluminationBombRequest)(nil),     // 28: dcs.trigger.v0.IlluminationBombRequest
	(*IlluminationBombResponse)(nil),    // 29: dcs.trigger.v0.IlluminationBombResponse
	(*SignalFlareRequest)(nil),          // 30: dcs.trigger.v0.SignalFlareRequest
	(*SignalFlareResponse)(nil),         // 31: dcs.trigger.v0.SignalFlareResponse
	(*Color)(nil),                       // 32: dcs.trigger.v0.Color
	(*MarkupToAllRequest)(nil),          // 33: dcs.trigger.v0.MarkupToAllRequest
	(*MarkupToAllResponse)(nil),         // 34: dcs.trigger.v0.MarkupToAllResponse
	(*MarkupToCoalitionRequest)(nil),    // 35: dcs.trigger.v0.MarkupToCoalitionRequest
	(*MarkupToCoalitionResponse)(nil),   // 36: dcs.trigger.v0.MarkupToCoalitionResponse
	(common.Coalition)(0),               // 37: dcs.common.v0.Coalition
	(*common.InputPosition)(nil),        // 38: dcs.common.v0.InputPosition
}
var file_dcs_trigger_v0_trigger_proto_depIdxs = []int32{
	37, // 0: dcs.trigger.v0.OutTextForCoalitionRequest.coalition:type_name -> dcs.common.v0.Coalition
	38, // 1: dcs.trigger.v0.MarkToAllRequest.position:type_name -> dcs.common.v0.InputPosition
	38, // 2: dcs.trigger.v0.MarkToCoalitionRequest.position:type_name -> dcs.common.v0.InputPosition
	37, // 3: dcs.trigger.v0.MarkToCoalitionRequest.coalition:type_name -> dcs.common.v0.Coalition
	38, // 4: dcs.trigger.v0.MarkToGroupRequest.position:type_name -> dcs.common.v0.InputPosition
	38, // 5: dcs.trigger.v0.ExplosionRequest.position:type_name -> dcs.common.v0.InputPosition
	38, // 6: dcs.trigger.v0.SmokeRequest.position:type_name -> dcs.common.v0.InputPosition
	2,  // 7: dcs.trigger.v0.SmokeRequest.color:type_name -> dcs.trigger.v0.SmokeRequest.SmokeColor
	38, // 8: dcs.trigger.v0.IlluminationBombRequest.position:type_name -> dcs.common.v0.InputPosition
	38, // 9: dcs.trigger.v0.SignalFlareRequest.position:type_name -> dcs.common.v0.InputPosition
	3,  // 10: dcs.trigger.v0.SignalFlareRequest.color:type_name -> dcs.trigger.v0.SignalFlareRequest.FlareColor
	1,  // 11: dcs.trigger.v0.MarkupToAllRequest.shape:type_name -> dcs.trigger.v0.Shape
	38, // 12: dcs.trigger.v0.MarkupToAllRequest.points:type_name -> dcs.common.v0.InputPosition
	32, // 13: dcs.trigger.v0.MarkupToAllRequest.border_color:type_name -> dcs.trigger.v0.Color
	32, // 14: dcs.trigger.v0.MarkupToAllRequest.fill_color:type_name -> dcs.trigger.v0.Color
	0,  // 15: dcs.trigger.v0.MarkupToAllRequest.line_type:type_name -> dcs.trigger.v0.LineType
	1,  // 16: dcs.trigger.v0.MarkupToCoalitionRequest.shape:type_name -> dcs.trigger.v0.Shape
	37, // 17: dcs.trigger.v0.MarkupToCoalitionRequest.coalition:type_name -> dcs.common.v0.Coalition
	38, // 18: dcs.trigger.v0.MarkupToCoalitionRequest.points:type_name -> dcs.common.v0.InputPosition
	32, // 19: dcs.trigger.v0.MarkupToCoalitionRequest.border_color:type_name -> dcs.trigger.v0.Color
	32, // 20: dcs.trigger.v0.MarkupToCoalitionRequest.fill_color:type_name -> dcs.trigger.v0.Color
	0,  // 21: dcs.trigger.v0.MarkupToCoalitionRequest.line_type:type_name -> dcs.trigger.v0.LineType
	4,  // 22: dcs.trigger.v0.TriggerService.OutText:input_type -> dcs.trigger.v0.OutTextRequest
	6,  // 23: dcs.trigger.v0.TriggerService.OutTextForCoalition:input_type -> dcs.trigger.v0.OutTextForCoalitionRequest
	8,  // 24: dcs.trigger.v0.TriggerService.OutTextForGroup:input_type -> dcs.trigger.v0.OutTextForGroupRequest
	10, // 25: dcs.trigger.v0.TriggerService.OutTextForUnit:input_type -> dcs.trigger.v0.OutTextForUnitRequest
	12, // 26: dcs.trigger.v0.TriggerService.GetUserFlag:input_type -> dcs.trigger.v0.GetUserFlagRequest
	14, // 27: dcs.trigger.v0.TriggerService.SetUserFlag:input_type -> dcs.trigger.v0.SetUserFlagRequest
	16, // 28: dcs.trigger.v0.TriggerService.MarkToAll:input_type -> dcs.trigger.v0.MarkToAllRequest
	18, // 29: dcs.trigger.v0.TriggerService.MarkToCoalition:input_type -> dcs.trigger.v0.MarkToCoalitionRequest
	20, // 30: dcs.trigger.v0.TriggerService.MarkToGroup:input_type -> dcs.trigger.v0.MarkToGroupRequest
	33, // 31: dcs.trigger.v0.TriggerService.MarkupToAll:input_type -> dcs.trigger.v0.MarkupToAllRequest
	35, // 32: dcs.trigger.v0.TriggerService.MarkupToCoalition:input_type -> dcs.trigger.v0.MarkupToCoalitionRequest
	22, // 33: dcs.trigger.v0.TriggerService.RemoveMark:input_type -> dcs.trigger.v0.RemoveMarkRequest
	24, // 34: dcs.trigger.v0.TriggerService.Explosion:input_type -> dcs.trigger.v0.ExplosionRequest
	26, // 35: dcs.trigger.v0.TriggerService.Smoke:input_type -> dcs.trigger.v0.SmokeRequest
	28, // 36: dcs.trigger.v0.TriggerService.IlluminationBomb:input_type -> dcs.trigger.v0.IlluminationBombRequest
	30, // 37: dcs.trigger.v0.TriggerService.SignalFlare:input_type -> dcs.trigger.v0.SignalFlareRequest
	5,  // 38: dcs.trigger.v0.TriggerService.OutText:output_type -> dcs.trigger.v0.OutTextResponse
	7,  // 39: dcs.trigger.v0.TriggerService.OutTextForCoalition:output_type -> dcs.trigger.v0.OutTextForCoalitionResponse
	9,  // 40: dcs.trigger.v0.TriggerService.OutTextForGroup:output_type -> dcs.trigger.v0.OutTextForGroupResponse
	11, // 41: dcs.trigger.v0.TriggerService.OutTextForUnit:output_type -> dcs.trigger.v0.OutTextForUnitResponse
	13, // 42: dcs.trigger.v0.TriggerService.GetUserFlag:output_type -> dcs.trigger.v0.GetUserFlagResponse
	15, // 43: dcs.trigger.v0.TriggerService.SetUserFlag:output_type -> dcs.trigger.v0.SetUserFlagResponse
	17, // 44: dcs.trigger.v0.TriggerService.MarkToAll:output_type -> dcs.trigger.v0.MarkToAllResponse
	19, // 45: dcs.trigger.v0.TriggerService.MarkToCoalition:output_type -> dcs.trigger.v0.MarkToCoalitionResponse
	21, // 46: dcs.trigger.v0.TriggerService.MarkToGroup:output_type -> dcs.trigger.v0.MarkToGroupResponse
	34, // 47: dcs.trigger.v0.TriggerService.MarkupToAll:output_type -> dcs.trigger.v0.MarkupToAllResponse
	36, // 48: dcs.trigger.v0.TriggerService.MarkupToCoalition:output_type -> dcs.trigger.v0.MarkupToCoalitionResponse
	23, // 49: dcs.trigger.v0.TriggerService.RemoveMark:output_type -> dcs.trigger.v0.RemoveMarkResponse
	25, // 50: dcs.trigger.v0.TriggerService.Explosion:output_type -> dcs.trigger.v0.ExplosionResponse
	27, // 51: dcs.trigger.v0.TriggerService.Smoke:output_type -> dcs.trigger.v0.SmokeResponse
	29, // 52: dcs.trigger.v0.TriggerService.IlluminationBomb:output_type -> dcs.trigger.v0.IlluminationBombResponse
	31, // 53: dcs.trigger.v0.TriggerService.SignalFlare:output_type -> dcs.trigger.v0.SignalFlareResponse
	38, // [38:54] is the sub-list for method output_type
	22, // [22:38] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_dcs_trigger_v0_trigger_proto_init() }
func file_dcs_trigger_v0_trigger_proto_init() {
	if File_dcs_trigger_v0_trigger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dcs_trigger_v0_trigger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForCoalitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForCoalitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutTextForUnitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserFlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserFlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToCoalitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToCoalitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplosionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplosionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlluminationBombRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlluminationBombResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalFlareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalFlareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkupToAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkupToAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkupToCoalitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dcs_trigger_v0_trigger_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkupToCoalitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dcs_trigger_v0_trigger_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dcs_trigger_v0_trigger_proto_goTypes,
		DependencyIndexes: file_dcs_trigger_v0_trigger_proto_depIdxs,
		EnumInfos:         file_dcs_trigger_v0_trigger_proto_enumTypes,
		MessageInfos:      file_dcs_trigger_v0_trigger_proto_msgTypes,
	}.Build()
	File_dcs_trigger_v0_trigger_proto = out.File
	file_dcs_trigger_v0_trigger_proto_rawDesc = nil
	file_dcs_trigger_v0_trigger_proto_goTypes = nil
	file_dcs_trigger_v0_trigger_proto_depIdxs = nil
}
